// @ts-nocheck
/* eslint-disable */

export function adjustEnvironment (){
  return "Object.defineProperty(window.frameElement.contentDocument, \"currentScript\", {\n    get: function () {\n      return window.currentSpt;\n    },\n  });\n  const nav1 =  async () => {\n\n    var __data = {};\n\n    var addData = (obj) => {\n      __data[obj.path] = obj.value;\n    };\n\n    var _createPathObj = (path, value) => {\n      return {\n        path: path,\n        value: value,\n      };\n    };\n\n    var isEmptyObject = (obj) => {\n      return (\n        obj &&\n        Object.keys(obj).length === 0 &&\n        Object.getOwnPropertyNames(obj).length === 0 &&\n        Object.getPrototypeOf(obj) === Object.prototype\n      );\n    };\n\n    var _deepObject = (_obj, fullPath) => {\n      var value = \"_FUNCTION_\";\n      var _type = typeof _obj;\n\n      if (_obj != null) {\n        value = null;\n      }\n\n      if (_type === \"function\") {\n        return \"_FUNCTION_\";\n      }\n      if (_type !== \"object\") {\n        value = _obj;\n        return value;\n      }\n\n      if (_obj) {\n        value = Array.isArray(_obj) ? [] : {};\n        var _props = Object.getOwnPropertyNames(_obj);\n        var _keys = Object.keys(_obj);\n\n        for (var _p in _obj) {\n          if (!_props.includes(_p)) {\n            _props.push(_p);\n          }\n        }\n\n        for (var i = 0; i < _keys.length; i++) {\n          var _key = _keys[i];\n          if (!_props.includes(_key)) {\n            _props.push(_key);\n          }\n        }\n\n        for (var i = 0; i < _props.length; i++) {\n          var _p = _props[i];\n\n          var _value = null;\n          if (fullPath === \"navigator\" && _p == \"enabledPlugin\") {\n            _value = \"_ENABLED_PLUGIN_\";\n          } else {\n            var newObject = _obj[_p];\n            _value = _deepObject(newObject, fullPath);\n          }\n\n          value[_p] = _value;\n        }\n      }\n\n      return value;\n    };\n\n    var _get = (fullPath) => {\n      var _obj = window;\n      var paths = fullPath.split(\".\");\n      var value = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        _obj = _obj[paths[i]];\n      }\n\n      value = _deepObject(_obj, fullPath);\n      return _createPathObj(fullPath, value);\n    };\n\n    var _getRendererInfo = () => {\n      var rendererInfo = null;\n      try {\n        var canvas = window.frameElement.contentDocument.createElement(\"canvas\");\n        var gl = canvas.getContext(\"webgl\");\n        var extension = gl.getExtension(\"WEBGL_debug_renderer_info\");\n        var rendererInfo = null;\n        if (extension) {\n          rendererInfo = {\n            WEBGL_debug_renderer_info: {},\n            supportedExtensions: gl.getSupportedExtensions(),\n          };\n          for (var p in extension) {\n            rendererInfo.WEBGL_debug_renderer_info[p] = extension[p];\n          }\n          rendererInfo.vendor = gl.getParameter(extension.UNMASKED_VENDOR_WEBGL);\n          rendererInfo.renderer = gl.getParameter(extension.UNMASKED_RENDERER_WEBGL);\n        }\n      } catch (error) {\n        rendererInfo = null;\n      }\n      return rendererInfo;\n    };\n\n    var getPeechSynthesis = () => {\n      var _speechSynthesis = null;\n      if (window.speechSynthesis) {\n        _speechSynthesis = [];\n        var _voices = window.speechSynthesis.getVoices();\n\n        for (var i = 0; i < _voices.length; i++) {\n          var _voice = {};\n          for (var _key in _voices[i]) {\n            _voice[_key] = _voices[i][_key];\n          }\n          _speechSynthesis.push(_voice);\n        }\n      }\n\n      return _speechSynthesis;\n    };\n\n    var userAgentData = async () => {\n      if (window.top.navigator.userAgentData) {\n        var hints = [\n          \"architecture\",\n          \"bitness\",\n          \"model\",\n          \"platformVersion\",\n          \"uaFullVersion\",\n          \"fullVersionList\",\n        ];\n\n        return await window.top.navigator.userAgentData.getHighEntropyValues(hints);\n      }\n\n      return null;\n    };\n\n    var collectUserBrowserData = async () => {\n      var _sData = \"\";\n\n      try {\n        var paths = [\n          \"navigator\",\n          \"screen\",\n          \"innerHeight\",\n          \"innerWidth\",\n          \"outerWidth\",\n          \"outerHeight\",\n          \"mozInnerScreenY\",\n          \"chrome\",\n        ];\n\n        for (var i = 0; i < paths.length; i++) {\n          addData(_get(paths[i]));\n        }\n\n        __data.navigator.userAgentData = await userAgentData();\n\n        addData(_createPathObj(\"timezoneOffset\", new Date().getTimezoneOffset()));\n        addData(\n          _createPathObj(\"javaEnabled\", navigator.javaEnabled ? navigator.javaEnabled() : null)\n        );\n        addData(_createPathObj(\"rendererInfo\", _getRendererInfo()));\n        addData(_createPathObj(\"RTCPeerConnection\", \"function\" == typeof window.RTCPeerConnection));\n        addData(\n          _createPathObj(\"mozRTCPeerConnection\", \"function\" == typeof window.mozRTCPeerConnection)\n        );\n        addData(\n          _createPathObj(\n            \"webkitRTCPeerConnection\",\n            \"function\" == typeof window.webkitRTCPeerConnection\n          )\n        );\n        addData(\n          _createPathObj(\n            \"IntlDateTimeFormatResolvedOptions\",\n            Intl.DateTimeFormat().resolvedOptions()\n          )\n        );\n        addData(_createPathObj(\"windowPropertyNames\", Object.getOwnPropertyNames(window)));\n\n        _sData = JSON.stringify(__data);\n      } catch (error) {\n        _sData = error.stack;\n      }\n\n      return _sData;\n    };\n\n    getPeechSynthesis();\n    await collectUserBrowserData();\n\n    setTimeout(() => {\n      addData(_createPathObj(\"speechSynthesis\", getPeechSynthesis()));\n    }, 200);\n  };\n  nav1();\n\n  nav2 = async () => {\n\n    \"use strict\";\n\n    if (!window.ASTJS) {\n      window.ASTJS = {};\n    }\n\n    if (!window.ASTJS.browserOverrides) {\n      window.navigator.__TuserAgent = navigator.userAgent;\n      window.navigator.__TappVersion = navigator.appVersion;\n\n      function ASTBrowserOverrides() {\n        this.inited = false;\n        this.UA_PROP = \"UA\";\n        this.APP_VERSION_PROP = \"AppVersion\";\n      }\n\n      function prototypeString() {\n        String.prototype.contains = function (_param) {\n          var str = String(_param);\n\n          return this.indexOf(str) >= 0;\n        };\n\n        String.prototype.containsIgnoreCase = function (_param) {\n          var str = String(_param);\n          var lowerThis = this.toLowerCase();\n          var lowerCompare = str.toLowerCase();\n\n          return lowerThis.indexOf(lowerCompare) >= 0;\n        };\n\n        if (!String.prototype.endsWith) {\n          String.prototype.endsWith = function (_param) {\n            var str = String(_param);\n            var thisLength = this.length;\n            var strLength = str.length;\n\n            var subThis = this.substring(thisLength - strLength);\n\n            return subThis === str;\n          };\n        }\n\n        if (!String.prototype.startsWith) {\n          String.prototype.startsWith = function (_param) {\n            return this.indexOf(_param) === 0;\n          };\n        }\n      }\n\n      ASTBrowserOverrides.prototype.init = function () {\n        if (!this.inited) {\n          prototypeString();\n        }\n      };\n\n      ASTBrowserOverrides.prototype.overrideDeviceEvents = function (addSafariIosEvents) {\n        var isChrome, isFirefox, isSafariMac, isSafariIos;\n\n        var _verifyUserAgents = function () {\n          var _userAgent = window.navigator.userAgent;\n\n          isChrome = _userAgent.containsIgnoreCase(\"chrome\");\n          isFirefox = _userAgent.containsIgnoreCase(\"firefox\");\n          isSafariMac =\n            !isChrome &&\n            !isFirefox &&\n            _userAgent.containsIgnoreCase(\"safari\") &&\n            _userAgent.containsIgnoreCase(\"macintosh\");\n          isSafariIos =\n            addSafariIosEvents &&\n            !isChrome &&\n            !isFirefox &&\n            !isSafariMac &&\n            (_userAgent.containsIgnoreCase(\"iPhone\") || _userAgent.containsIgnoreCase(\"iPad\"));\n        };\n\n        try {\n          _verifyUserAgents();\n\n          if (isChrome || isFirefox || isSafariIos) {\n            if (!window.DeviceOrientationEvent) {\n              window.DeviceOrientationEvent = function () {};\n            }\n            if (!window.DeviceMotionEvent) {\n              window.DeviceMotionEvent = function () {};\n            }\n\n            if (!isFirefox && !window.TouchEvent) {\n              window.TouchEvent = function () {};\n            }\n          } else if (isSafariMac) {\n            window.DeviceOrientationEvent = undefined;\n            window.DeviceMotionEvent = undefined;\n            window.TouchEvent = undefined;\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      ASTBrowserOverrides.prototype.overrideDocumentCookie = function () {\n        var pwmbCookiesStorage = {};\n        Object.defineProperty(window.frameElement.contentDocument, \"cookie\", {\n          get: function () {\n            var _cookies = [];\n            for (var cName in pwmbCookiesStorage) {\n              _cookies.push(cName + \"=\" + pwmbCookiesStorage[cName]);\n            }\n            return _cookies.join(\"; \");\n          },\n          set: function (cookies) {\n            if (typeof cookies === \"string\") {\n              var cookieArr = cookies.split(\"; \");\n              for (var i = 0; i < cookieArr.length; i++) {\n                var cookie = cookieArr[i];\n                var deleted = false;\n                var cName = cookie.split(\"=\", 1)[0];\n                var cValue = cookie.replace(cName + \"=\", \"\");\n\n                var indexExpires = cValue.indexOf(\"expires=\");\n                if (indexExpires >= 0) {\n                  var expires = cValue.substring(indexExpires + \"expires=\".length, cValue.length);\n\n                  if (expires != \"\") {\n                    expires = expires.split(\";\")[0];\n\n                    if (new Date(expires) < new Date() && pwmbCookiesStorage[cName]) {\n                      delete pwmbCookiesStorage[cName];\n                      deleted = true;\n                    }\n                  }\n                }\n                if (!deleted) {\n                  pwmbCookiesStorage[cName] = cValue;\n                }\n              }\n            }\n          },\n        });\n      };\n\n      ASTBrowserOverrides.prototype.overrideDocumentURL = function (url) {\n        Object.defineProperty(window.frameElement.contentDocument, \"URL\", {\n          get: function () {\n            return url;\n          },\n        });\n      };\n\n      ASTBrowserOverrides.prototype.overrideUserAgent = function (scriptName, userAgent) {\n        if (scriptName && window.navigator.userAgent !== userAgent) {\n          const UA_PROP = \"UA\";\n          const APP_VERSION_PROP = \"AppVersion\";\n\n          window.frameElement.contentDocument.currentScript[scriptName + UA_PROP] = userAgent;\n          window.frameElement.contentDocument.currentScript[scriptName + APP_VERSION_PROP] =\n            userAgent.substring(userAgent.indexOf(\"/\") + 1);\n\n          try {\n            window.navigator.__defineGetter__(\"userAgent\", function () {\n              if (\n                window.frameElement.contentDocument.currentScript &&\n                window.frameElement.contentDocument.currentScript[scriptName + UA_PROP]\n              ) {\n                return window.frameElement.contentDocument.currentScript[scriptName + UA_PROP];\n              }\n              return window.navigator.__TuserAgent;\n            });\n\n            window.navigator.__defineGetter__(\"appVersion\", function () {\n              if (\n                window.frameElement.contentDocument.currentScript &&\n                window.frameElement.contentDocument.currentScript[scriptName + APP_VERSION_PROP]\n              ) {\n                return window.frameElement.contentDocument.currentScript[\n                  scriptName + APP_VERSION_PROP\n                ];\n              }\n              return window.navigator.__TappVersion;\n            });\n          } catch (error) {}\n\n          this.overrideDeviceEvents();\n        }\n      };\n\n      ASTBrowserOverrides.prototype.overrideScreenSizes = function () {\n        try {\n          window.__TinnerHeight = window.innerHeight;\n\n          if (window.localStorage) {\n            if (window.localStorage.getItem(\"tinnerHeight\") === null) {\n              if (frameElement?.contentDocument?.body?.clientHeight) {\n                window.__TinnerHeight =\n                  screen.height - frameElement.contentDocument.body.clientHeight;\n                localStorage.setItem(\"tinnerHeight\", window.__TinnerHeight);\n              }\n            } else {\n              window.__TinnerHeight = parseInt(localStorage.getItem(\"tinnerHeight\"));\n            }\n          } else {\n            if (frameElement?.contentDocument?.body?.clientHeight) {\n              window.__TinnerHeight =\n                screen.height - frameElement.contentDocument.body.clientHeight;\n            }\n          }\n\n          Object.defineProperty(window, \"innerHeight\", {\n            get: function () {\n              return window.__TinnerHeight;\n            },\n          });\n\n          Object.defineProperty(window.frameElement.contentDocument.body, \"clientHeight\", {\n            get: function () {\n              return window.__TinnerHeight;\n            },\n          });\n          Object.defineProperty(\n            window.frameElement.contentDocument.documentElement,\n            \"clientHeight\",\n            {\n              get: function () {\n                return window.__TinnerHeight;\n              },\n            }\n          );\n\n          window.__TouterHeight = window.outerHeight;\n          window.__TouterHeightP = window.outerHeight;\n          if (window.parent) {\n            window.__TouterHeightP = window.parent.outerHeight;\n          }\n          Object.defineProperty(window, \"outerHeight\", {\n            get: function () {\n              if (window.parent) {\n                return window.__TouterHeightP;\n              }\n              return window.__TouterHeight;\n            },\n          });\n\n          window.__TinnerWidth = window.innerWidth;\n\n          Object.defineProperty(window, \"innerWidth\", {\n            get: function () {\n              return window.screen.width;\n            },\n          });\n\n          window.__TouterWidth = window.outerWidth;\n          window.__TouterWidthP = window.outerWidth;\n          if (window.parent) {\n            window.__TouterWidth = window.parent.outerWidth;\n          }\n\n          Object.defineProperty(window, \"outerWidth\", {\n            get: function () {\n              if (window.parent) {\n                return window.__TouterWidthP;\n              }\n              return window.__TouterWidth;\n            },\n          });\n\n          Object.defineProperty(window.frameElement.contentDocument.body, \"clientWidth\", {\n            get: function () {\n              return window.screen.width;\n            },\n          });\n\n          Object.defineProperty(\n            window.frameElement.contentDocument.documentElement,\n            \"clientWidth\",\n            {\n              get: function () {\n                return window.screen.width;\n              },\n            }\n          );\n        } catch {}\n      };\n\n      ASTBrowserOverrides.prototype.overrideBatteryVibrate = function (mockBattery) {\n        if (\n          !window.navigator.vendor.match(/apple/i) &&\n          !window.navigator.userAgent.match(/crios/i) &&\n          !window.navigator.userAgent.match(/fxios/i) &&\n          !window.navigator.userAgent.match(/Opera|OPT\\//)\n        ) {\n          if (!window.navigator.userAgent.includes(\"Firefox\") && !window.navigator.getBattery) {\n            if (mockBattery) {\n              window.navigator.getBattery = function () {\n                return new Promise((resolve, reject) => {\n                  let level = Math.random().toFixed(2);\n                  let chargingTime = Infinity;\n                  if (level * 100 == 100) {\n                    chargingTime = 0;\n                  }\n\n                  resolve({\n                    charging: true,\n                    chargingTime: chargingTime,\n                    dischargingTime: Infinity,\n                    level: level,\n                    onchargingchange: null,\n                    onchargingtimechange: null,\n                    ondischargingtimechange: null,\n                    onlevelchange: null,\n                  });\n                });\n              };\n            } else {\n              window.navigator.getBattery = function () {};\n            }\n          }\n          if (!window.navigator.vibrate) {\n            window.navigator.getBattery = function () {\n              return true;\n            };\n          }\n        }\n      };\n\n      window.ASTJS.browserOverrides = new ASTBrowserOverrides();\n    }\n\n    window.ASTJS.browserOverrides.init();\n  }\n  nav2();\n\n  xhrr = async () => {\n\n    \"use strict\";\n\n    if (!window.ASTJS) {\n      window.ASTJS = {};\n    }\n\n    if (!window.ASTJS.formControls) {\n      function ASTFormControls() {}\n      window.ASTJS.formControls = new ASTFormControls();\n    }\n  }\n  xhrr();\n\n  interceptors = async () => {\n\n    \"use strict\";\n\n    if (!window.ASTJS) {\n      window.ASTJS = {};\n    }\n\n    if (!window.ASTJS.formControls) {\n      throw \"ASTInterceptors needs ASTFormControls\";\n    }\n\n    function ASTInterceptors() {}\n\n    ASTInterceptors.prototype.createFetchInterceptor = function (callBack, credentialName) {\n      if (fetch) {\n        var ___fetch = fetch;\n        fetch = function (url, params) {\n          /** AST nativeCode */\n          var _value = null;\n\n          try {\n            _value = callBack(url, params);\n          } catch (error) {\n            _value = null;\n            console.log(error.stack);\n          }\n\n          if (!_value) {\n            ___fetch(url, params);\n          }\n        };\n      }\n    };\n\n    ASTInterceptors.prototype.createXMLHttpRequestInterceptor = function (\n      requestMatcher,\n      customOpen,\n      customSend\n    ) {\n      window.XMLHttpRequestCustomOverrides = window.XMLHttpRequestCustomOverrides || [];\n      window.XMLHttpRequestCustomOverrides.push({\n        requestMatcher,\n        customOpen,\n        customSend,\n      });\n\n      if (window.XMLHttpRequest && !window.XMLHttpRequestCustomOverriden) {\n        function getCustomOverrides(url) {\n          for (const custom of window.XMLHttpRequestCustomOverrides) {\n            if (custom.requestMatcher && custom.requestMatcher({ url })) {\n              return custom;\n            }\n          }\n\n          return {};\n        }\n\n        window.XMLHttpRequest.prototype.___open = window.XMLHttpRequest.prototype.open;\n        window.XMLHttpRequest.prototype.___send = window.XMLHttpRequest.prototype.send;\n\n        window.XMLHttpRequest.prototype.open = function () {\n          /** AST nativeCode */\n          var { customOpen, customSend } = getCustomOverrides(arguments[1]);\n\n          if (customSend) {\n            this.customSend = customSend;\n          }\n\n          if (customOpen) {\n            customOpen.apply(this, arguments);\n          } else {\n            this.___open.apply(this, arguments);\n          }\n        };\n\n        window.XMLHttpRequest.prototype.send = function () {\n          var { customSend } = this;\n\n          if (customSend) {\n            customSend.apply(this, arguments);\n          } else {\n            this.___send.apply(this, arguments);\n          }\n        };\n\n        window.XMLHttpRequestCustomOverriden = true;\n      }\n    };\n\n    ASTInterceptors.prototype.createFormSubmitInterceptor = function (callback) {\n      var _forms =\n        window.frameElement.contentDocument.forms ||\n        window.frameElement.contentDocument.getElementsByTagName(\"form\");\n\n      for (var i = 0; i < _forms.length; ++i) {\n        _forms[i].addEventListener(\"submit\", callback);\n      }\n    };\n\n    window.ASTJS.interceptors = new ASTInterceptors();\n  }\n  interceptors();\n\n  const LOCATION_HREF = window.documentUrl;\n  const DOCUMENT_URL = LOCATION_HREF;\n  const OBJECT = {\n    prototype: {\n      toString: Object.prototype.toString,\n    },\n    getOwnPropertyNames: {\n      ignore: [\n        \"userAgent\",\n        \"appVersion\",\n        \"getBattery\",\n        \"getElementsByTagName\",\n        \"vibrate\",\n        \"vendor\",\n        \"platform\",\n      ],\n      native: Object.getOwnPropertyNames,\n    },\n    getOwnPropertyDescriptors: {\n      ignore: [\n        \"userAgent\",\n        \"appVersion\",\n        \"getBattery\",\n        \"getElementsByTagName\",\n        \"vibrate\",\n        \"vendor\",\n        \"platform\",\n      ],\n      native: Object.getOwnPropertyDescriptors,\n    },\n  };\n\n  const FUNCTION = {\n    prototype: {\n      toString: Function.prototype.toString,\n    },\n  };\n\n  function setNativeName(obj, name) {\n    Object.defineProperty(obj, \"name\", { value: name });\n  }\n\n  var sensorDataUserAgent = window.userAgentOv;\n\n  overrideUserAgent(sensorDataUserAgent);\n\n  function overrideUserAgent(userAgent) {\n    if (window.navigator.userAgent !== userAgent) {\n      try {\n        window.navigator.__defineGetter__(\"userAgent\", function () {\n          return userAgent;\n        });\n\n        window.navigator.__defineGetter__(\"appVersion\", function () {\n          return userAgent.substring(userAgent.indexOf(\"/\") + 1);\n        });\n      } catch (error) {}\n    }\n  }\n\n  function toString() {\n    var _typeOf = typeof this;\n    let stringValue = \"\";\n\n    if (_typeOf === \"function\") {\n      var funcName = this.name;\n\n      if (!funcName || funcName === \"\") {\n        for (p in this) {\n          funcName = p;\n          break;\n        }\n      }\n\n      stringValue = FUNCTION.prototype.toString.apply(this, arguments);\n\n      if (stringValue.indexOf(\"/** AST nativeCode */\") >= 0) {\n        stringValue = `function ${funcName}() { [native code] }`;\n      } else {\n        stringValue = stringValue.replace(/\\/\\*startPatch\\*\\/.+?\\/\\*endPatch\\*\\//gs, \"\");\n      }\n\n      return stringValue;\n    } else if (_typeOf === \"object\") {\n      var objName = this.constructor.name;\n\n      if (!objName || objName === \"\") {\n        objName = \"Object\";\n      }\n\n      stringValue = OBJECT.prototype.toString.apply(this, arguments);\n\n      if (this.constructor.toString().indexOf(\"[native code]\") >= 0) {\n        stringValue = `[object ${objName}]`;\n      }\n    }\n\n    return stringValue;\n  }\n\n  Function.prototype.toString = toString;\n  Object.prototype.toString = toString;\n\n  Object.getOwnPropertyNames = function (obj) {\n    /** AST nativeCode */\n    let props = OBJECT.getOwnPropertyNames.native(obj);\n\n    props = props.filter(\n      (e) => !e.indexOf(\"__T\") == 0 && OBJECT.getOwnPropertyNames.ignore.indexOf(e) === -1\n    );\n\n    return props;\n  };\n\n  setNativeName(Object.getOwnPropertyNames, \"getOwnPropertyNames\");\n\n  Object.getOwnPropertyDescriptors = function (obj) {\n    /** AST nativeCode */\n    let descriptors = OBJECT.getOwnPropertyDescriptors.native(obj);\n\n    for (const key in descriptors) {\n      if (key.indexOf(\"__T\") == 0 || OBJECT.getOwnPropertyNames.ignore.indexOf(key) >= 0) {\n        delete descriptors[key];\n      }\n    }\n\n    return descriptors;\n  };\n\n  setNativeName(Object.getOwnPropertyDescriptors, \"getOwnPropertyDescriptors\");\n\n  function setPathName(_obj, _value) {\n    _obj.search = \"\";\n    _obj.hash = \"\";\n    var indexPath = _value.indexOf(\"/\");\n    var indexSearch = _value.indexOf(\"?\");\n    var indexHash = _value.indexOf(\"#\");\n\n    if (indexHash > indexPath) {\n      _obj.pathname = _value.substring(indexPath, indexHash);\n      _obj.hash = _value.substring(indexHash);\n    } else if (indexSearch > indexPath) {\n      _obj.pathname = _value.substring(indexPath, indexSearch);\n      _obj.search = _value.substring(indexSearch);\n    } else {\n      _obj.pathname = _value.substring(indexPath);\n    }\n  }\n\n  function setHref(_obj, _value) {\n    if (_value != null) {\n      if (_value.startsWith(\"/\")) {\n        setPathName(_obj, _value);\n      } else {\n        _obj.port = \"\";\n        var divider = \"//\";\n\n        var i = _value.indexOf(divider);\n\n        _obj.protocol = _value.substring(0, i);\n\n        var url = _value.substring(i + divider.length);\n\n        if (url.indexOf(\"/\") >= 0) {\n          var indexPath = url.indexOf(\"/\");\n          _obj.hostname = url.substring(0, indexPath);\n\n          setPathName(_obj, url);\n        } else {\n          _obj.hostname = url;\n        }\n\n        var splitHost = _obj.hostname.split(\":\");\n\n        if (splitHost.length > 1) {\n          _obj.hostname = splitHost[0];\n          _obj.port = splitHost[1];\n        }\n      }\n    }\n  }\n\n  function getHref(_obj) {\n    return _obj.origin + _obj.pathname + _obj.hash + _obj.search;\n  }\n\n  function getHost(_obj) {\n    if (_obj.port !== \"\") {\n      return _obj.hostname + \":\" + _obj.port;\n    }\n\n    return _obj.hostname;\n  }\n\n  function getOrigin(_obj) {\n    return _obj.protocol + \"//\" + _obj.host;\n  }\n\n  /** Defining DOMStringList */\n  class _DOMStringList {\n    /** AST nativeCode */\n  }\n  setNativeName(_DOMStringList, \"DOMStringList\");\n\n  function contains() {\n    /** AST nativeCode */\n  }\n  function item(i) {\n    /** AST nativeCode */\n  }\n\n  _DOMStringList.prototype.contains = contains;\n  _DOMStringList.prototype.item = item;\n\n  Object.defineProperty(_DOMStringList.prototype, \"length\", {\n    get: function () {\n      return 0;\n    },\n  });\n\n  /** Defining Location */\n  class _Location {\n    /** AST nativeCode */\n    constructor() {\n      this.hash = \"\";\n      this.hostname = \"\";\n      this.pathname = \"\";\n      this.port = \"\";\n      this.protocol = \"\";\n      this.search = \"\";\n      function toString() {\n        /** AST nativeCode */ return this.href;\n      }\n      this.toString = toString;\n    }\n  }\n  setNativeName(_Location, \"Location\");\n\n  function assign() {\n    /** AST nativeCode */\n  }\n  function reload() {\n    /** AST nativeCode */\n  }\n  function replace() {\n    /** AST nativeCode */\n  }\n  _Location.prototype.assign = assign;\n  _Location.prototype.reload = reload;\n  _Location.prototype.replace = replace;\n\n  Object.defineProperty(_Location.prototype, \"host\", {\n    get: function () {\n      return getHost(this);\n    },\n  });\n\n  Object.defineProperty(_Location.prototype, \"origin\", {\n    get: function () {\n      return getOrigin(this);\n    },\n  });\n\n  Object.defineProperty(_Location.prototype, \"href\", {\n    set: function (value) {\n      setHref(this, value);\n    },\n    get: function () {\n      return getHref(this);\n    },\n  });\n\n  window._Location = _Location;\n  window.location__ = new _Location();\n  window.location__.href = LOCATION_HREF;\n\n  Object.defineProperty(window.frameElement.contentDocument, \"URL\", { value: DOCUMENT_URL });\n\n  function createPayload(object) {\n    delete object.baseUrl;\n\n    let params = [];\n    for (let property in object) {\n      let value = object[property];\n      params.push(\n        encodeURIComponent(property) +\n          \"=\" +\n          encodeURIComponent(typeof value === \"object\" ? JSON.stringify(value) : value)\n      );\n    }\n    return params.join(\"&\");\n  }\n\n  var cookies = [\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~-1~YAAQb4xivhrmy9+IAQAA5Q5eJgq+tg0kgT85jEvpKwFffSHyDHt13ySYClcDXNaEGM+jOp/4oi2wZ+FUtLM03kUyTbcXKHD6Knbr8uBuVxHhpffOlx1PWIQYH9lhYDD1RBYnb1Og8SR893n0RHzSyXSntv2CQ/FPNv6ubUOgCuKpwZtdWMyZDww5gSZpFM/kCzgoDFEQPjqWnIuxTBxojaiXC8+edmNXuj+HTdd2mDRb71J3W+49Ayy5TBkuPR23+NIdGwMSlk04keXj40mBLQS5bKWVAnujWz49X+QCp+3CfZ/WI0T5kh2FZXnwT9xosc9TbfZfxAfEa7QP8ii1Dwu+IOltMyONtPzMgh52Cv45cB9xSR0IhrZY+wGIYsrbtEW5Yki3mw==~-1~||1-jaHBmBrjqk-1-10-1000-2||~-1;\",\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~-1~YAAQb4xivn3my9+IAQAAohJeJgrAks4u07U3aKmWCzW+LlMv7KX5yZMcCyyZuR+OqSFH4pBlogSZvLW1hfsb3ZKtMqv73Pi7FaWzGPsEO0qCVoUgQhoIPfyqw+97vyHlMl6e59/jZ7btN8sIT3QbObVgMcbm0ilB27Gc8kwOhZcdL8gN18WXif24AE6ceXQhNjeX3zkLa1uS/Q49McIEeVYhIn7j2BRh8qshJcaHQxWsk2ckOhrVQGkwW0dVlAFxdDPxRWndP18p2bC5uiPWUIgXXM0w6BvZg//lD5njj/W9CK9PMrhbYhZTTGSBawIhmV5wm2kC1x1tyMu4uFRIP9cfB822NX/4f3UeP0tbM1vr0yS+tlzFcHMsvyvxrfsIUyHF2OMp9Q==~-1~||1-jaHBmBrjqk-1-10-1000-2||~-1;\",\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~-1~YAAQb4xivnDmy9+IAQAAvRFeJgrv/rghqjZq1LKKy9psf0lZF5/l9hFPSOy76DqpHrbVS3EbrnRLpSEMn9zG4JWhFh16WiYVQ27xBFOzdCGVwTCk0fhoAfYGCfq9B6Jvtm7taJtoldUT49YZiAtoQqG2cdW0dwTu81Q9Q6ntfHcdrkU0xOioHfpE2L9zNqFepccKCBkl7+1di5lZ2Lu+5fHVrMB8+jPKuJMc5rwo2E3jHe8V5ByERiTOIsFk3Bvh098GycTbbftv5aLLxM5bWUqmPCK/aeXDmZoXsdG6mWD+xgzo4zq+bWW8V1X3+sNx4+4TYOzu0YFRGA34Z384TM0WFTb8cahqUiIs32U67X0LTKMHhcYEnCYfpO9tymP2e9bNVbLy6Q==~-1~||1-jaHBmBrjqk-1-10-1000-2||~-1;\",\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~-1~YAAQb4xivprmy9+IAQAAGBReJgrTB0IC6VTnf99Vmvnz/9ld7HTIp6IUpDBHs0kU4ed9h0o5un6mr/7bByNLmL1LgT4n0xaAd5E1enCXk82YZM2iNAjA7YTuAvSlXjJB3sBOK8lS7GlEv3a7bhj8heobGriEtkTr6XpH1s6oahK/G0GyDaLCu/O17bpMdNFw37Yir7gj82i7yxR0WZPUBpQ6HYeFG9FvruX8fjqs3F0qunIushxLdw1JRBUct/vnDM07niaY90i2RL6vmHt+SHorKuV6f/Ptva0tNewJDcPq2+w+enqlCS+MbX/lBCvUCDRulSKdoM1jmQzQEMzFQgcehwIQ+XIyH4FphYXcD3fGf3C3I0mjx+MvNpQrr+Q5flvuNZIZHg==~-1~||-1||~-1;\",\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~0~YAAQb4xivs/my9+IAQAAdxheJgoBak8ZIkmAkR8oB+R4fY3UP/R+0bhLSW5BeEa9b2lNpXdZjeVGiVMqC9NSGIjv5GjQqX5QeoZw47hHO9tvZRvhHK/6gPjJvKFN2f33PDmVyGDQj428NdJjU4C7Hbsg7YusjM0In1AzaXUfA4UY44YrRFbFOx+UpBqC6s0nDLLGQw5YEwGYkeeFpCSWFlWfaffi9a68hErg6turMZE7NWHuAmyXTjOzU0Khx0N3NpjI/e3ZPiPHqak/JCKT0v50OjO2ImyFdo7oDmZxty/joYmSUjZ/h9RA6GAdKZP2G1TEh5wISvys5f1uPtFt32luJi9ALHxc1POBYXaGo/GJepFRmhzRcHg7n3CgAZJPaK7/iololknPUpiodC+SGkcrW7nk~-1~-1~-1;\",\n  ];\n\n  function getCookies() {\n    return cookies.shift();\n  }\n\n  window.frameElement.contentDocument.cookie =\n    \"_abck=89E9305CB44AD0606B67BE2A31F9367C~-1~YAAQb4xivsrly9+IAQAACgleJgqG66qr4dSIY3b8xQkka0lawAUZZ+0vzh6DYYf+EomEq4r8UTSxIpQRikzvbKd6Aua/kv+ypMO5V6hRKSr5dYBOr4hf+iS/fL1pa1WlsFTj/7rARfkcSQ5eHMbH/5KkG03NB8CHkYvhJzy/LSPbuDhyh/sIwnRUV+gWujRgtN41ipdTt+iUyBP9XQ/l7Rm5PR8QkUS2q/+0wQaN52bxGVM/zJQc9yJVdidZUJiUo23mTJyHw1NYwAI+TRW8HiI0MJ24IOCo/uSTZGaGl07Ll6wGcst5YhqL7iO17eZZbQ3JGwNgEzy5aXpYhgBnxu8+FK9tRnsABiKzZTtaP0fsatR2jMrFJZPVY/obm+yLSgWZFp//Mw==~-1~-1~-1;\";\n\n  window.ASTJS.interceptors.createXMLHttpRequestInterceptor(\n    function ({ url }) {\n      return url.endsWith(SCRIPT_URL);\n    },\n    null,\n    function () {\n      try {\n        if (window.continueExecuting) {\n          let _this = this;\n          let xhr = new XMLHttpRequest();\n          xhr.onerror = function (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n          };\n\n          xhr.open(\"POST\", `https://mock.codes/`);\n          xhr.onreadystatechange = function (e) {\n            try {\n              let cookies = getCookies();\n\n              window.frameElement.contentDocument.cookie = cookies;\n              Object.defineProperty(_this, \"readyState\", { value: 4 });\n              Object.defineProperty(_this, \"status\", { value: 201 });\n              Object.defineProperty(_this, \"statusText\", {\n                value: \"OK\",\n              });\n              Object.defineProperty(_this, \"responseText\", {\n                value: '{\"success\":true}',\n              });\n              Object.defineProperty(_this, \"response\", {\n                value: '{\"success\":true}',\n              });\n              Object.defineProperty(_this, \"responseURL\", {\n                value: _this._url,\n              });\n\n              _this.onreadystatechange(e);\n            } catch (e) {\n              window.ASTJS.formControls.createOrUpdateCredential(\"sensordata_post_error\", e.stack);\n            }\n          };\n\n          xhr.setRequestHeader(\"Accept\", \"application/json; app=react\");\n          xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n          xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n          xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n\n          let payload = {\n            \"prompt-sensordata\": arguments[0],\n          };\n\n          payload = Object.assign(payload, {});\n          window.top.postS++;\n\n          xhr.send(createPayload(payload));\n          return;\n        }\n      } catch (e) {\n        window.ASTJS.formControls.createOrUpdateCredential(\"sensordata_post_error\", e.stack);\n      }\n    }\n  );\n\n  var pwmbCookiesStorage = {};\n  Object.defineProperty(window.frameElement.contentDocument, \"cookie\", {\n    get: function () {\n      var _cookies = [];\n      for (var cName in pwmbCookiesStorage) {\n        _cookies.push(cName + \"=\" + pwmbCookiesStorage[cName]);\n      }\n      return _cookies.join(\"; \");\n    },\n    set: function (cookies) {\n      if (typeof cookies === \"string\") {\n        var cookieArr = cookies.split(\"; \");\n        for (var i = 0; i < cookieArr.length; i++) {\n          var cookie = cookieArr[i];\n          var deleted = false;\n          var cName = cookie.split(\"=\", 1)[0];\n          var cValue = cookie.replace(cName + \"=\", \"\");\n\n          var indexExpires = cValue.indexOf(\"expires=\");\n          if (indexExpires >= 0) {\n            var expires = cValue.substring(indexExpires + \"expires=\".length, cValue.length);\n\n            if (expires != \"\") {\n              expires = expires.split(\";\")[0];\n\n              if (new Date(expires) < new Date() && pwmbCookiesStorage[cName]) {\n                delete pwmbCookiesStorage[cName];\n                deleted = true;\n              }\n            }\n          }\n          if (!deleted) {\n            pwmbCookiesStorage[cName] = cValue;\n          }\n        }\n      }\n    },\n  });\n\n  setNativeName(window.XMLHttpRequest.prototype.send, \"send\");\n  setNativeName(window.XMLHttpRequest.prototype.open, \"open\");\n\n  window.ASTJS.browserOverrides.overrideBatteryVibrate();\n  window.ASTJS.browserOverrides.overrideScreenSizes();\n  window.ASTJS.browserOverrides.overrideDeviceEvents(true);\n\n  const SCRIPT_URL = window.scriptUrl;\n  try {\n    Object.defineProperty(window.frameElement.contentDocument.currentScript, \"src\", {\n      get: function () {\n        let src = window.scriptUrl;\n        if (src.length == 0) {\n          return \"\";\n        }\n        if (!src.startsWith(\"http\")) {\n          src = window.location__.protocol + \"//\" + window.location__.hostname + src;\n        }\n        return src;\n      },\n    });\n  } catch {}\n  window._TformInfo = [\n    `<input type=\"hidden\" name=\"fromPnc\" value=\"true\" />\n              <input type=\"text\" name=\"userId\" placeholder=\"Enter User ID\" class=\"cmp-login__user-id-input-field\" autocomplete=\"off\" />\n              <input type=\"checkbox\" name=\"save_user_id\" value=\"false\" aria-describedby=\"cmp-login__tooltip-copy-small\" class=\"cmp-login__save-user-id\" aria-checked=\"false\" />\n              <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" class=\"cmp-login__password-input-field\" autocomplete=\"off\" />\n              <input type=\"checkbox\" name=\"save_user_id\" value=\"false\" aria-describedby=\"cmp-login__tooltip-copy-large\" class=\"cmp-login__save-user-id\" aria-checked=\"false\" />\n              <input type=\"submit\" role=\"button\" value=\"Login\" class=\"cmp-login__submit\" disabled=\"disabled\" />\n              <input type=\"search\" value=\"\" name=\"navSearchField\" id=\"navSearchField\" placeholder=\"Search\" aria-label=\"search\" title=\"Search\" class=\"cmp-search__input-field\" autocomplete=\"off\" aria-describedby=\"cmp-search__instructions\" aria-owns=\"ul-id-1\" aria-expanded=\"false\" aria-autocomplete=\"list\" aria-activedescendant=\"\" role=\"combobox\" />\n              <input type=\"submit\" tabindex=\"0\" role=\"button\" value=\"Search\" class=\"cmp-search__submit\" disabled=\"disabled\" />\n              <input type=\"hidden\" name=\"fromPnc\" value=\"true\" />\n              <input type=\"text\" name=\"userId\" placeholder=\"Enter User ID\" class=\"cmp-login__user-id-input-field\" autocomplete=\"off\" />\n              <input type=\"checkbox\" name=\"save_user_id\" value=\"false\" aria-describedby=\"cmp-login__tooltip-copy-small\" class=\"cmp-login__save-user-id\" aria-checked=\"false\" />\n              <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" class=\"cmp-login__password-input-field\" autocomplete=\"off\" />\n              <input type=\"checkbox\" name=\"save_user_id\" value=\"false\" aria-describedby=\"cmp-login__tooltip-copy-large\" class=\"cmp-login__save-user-id\" aria-checked=\"false\" />\n              <input type=\"submit\" role=\"button\" value=\"Login\" class=\"cmp-login__submit\" disabled=\"disabled\" />`,\n  ];\n  window._TloadingInformInfo = true;\n\n  function getFormInput() {\n    if (!window._TformInfo && !window._TformInfo[0]) {\n      return [\"\"];\n    }\n    let formInfo = window._TformInfo[0];\n\n    if (window._TformInfo.length > 1 && !window._TloadingInformInfo) {\n      window._TformInfo.shift();\n    }\n\n    if (window._TloadingInformInfo) {\n      window._TloadingInformInfo = false;\n    }\n    return formInfo;\n  }\n\n  window.frameElement.contentDocument.__TgetElementsByTagName =\n    window.frameElement.contentDocument.getElementsByTagName;\n  Object.defineProperty(window.frameElement.contentDocument, \"getElementsByTagName\", {\n    get: function () {\n      return function (tagname) {\n        if (tagname == \"input\") {\n          return new DOMParser()\n            .parseFromString(getFormInput(), \"text/html\")\n            .querySelectorAll(\"input\");\n        }\n\n        return window.frameElement.contentDocument.__TgetElementsByTagName(tagname);\n      };\n    },\n  });\n\n  chrome = {};\n  chrome.app = {\n    InstallState: {\n      DISABLED: \"disabled\",\n      INSTALLED: \"installed\",\n      NOT_INSTALLED: \"not_installed\",\n    },\n    RunningState: {\n      CANNOT_RUN: \"cannot_run\",\n      READY_TO_RUN: \"ready_to_run\",\n      RUNNING: \"running\",\n    },\n    getDetails: () => {\n      \"[native code]\";\n    },\n    getIsInstalled: () => {\n      \"[native code]\";\n    },\n    installState: () => {\n      \"[native code]\";\n    },\n    get isInstalled() {\n      return false;\n    },\n    runningState: () => {\n      \"[native code]\";\n    },\n  };\n  if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n    let chrome = {};\n    chrome.runtime = {\n      OnInstalledReason: {\n        CHROME_UPDATE: \"chrome_update\",\n        INSTALL: \"install\",\n        SHARED_MODULE_UPDATE: \"shared_module_update\",\n        UPDATE: \"update\",\n      },\n      OnRestartRequiredReason: {\n        APP_UPDATE: \"app_update\",\n        OS_UPDATE: \"os_update\",\n        PERIODIC: \"periodic\",\n      },\n      PlatformArch: {\n        ARM: \"arm\",\n        ARM64: \"arm64\",\n        MIPS: \"mips\",\n        MIPS64: \"mips64\",\n        X86_32: \"x86-32\",\n        X86_64: \"x86-64\",\n      },\n      PlatformNaclArch: {\n        ARM: \"arm\",\n        MIPS: \"mips\",\n        MIPS64: \"mips64\",\n        X86_32: \"x86-32\",\n        X86_64: \"x86-64\",\n      },\n      PlatformOs: {\n        ANDROID: \"android\",\n        CROS: \"cros\",\n        FUCHSIA: \"fuchsia\",\n        LINUX: \"linux\",\n        MAC: \"mac\",\n        OPENBSD: \"openbsd\",\n        WIN: \"win\",\n      },\n      RequestUpdateCheckStatus: {\n        NO_UPDATE: \"no_update\",\n        THROTTLED: \"throttled\",\n        UPDATE_AVAILABLE: \"update_available\",\n      },\n      connect: function () {\n        \"[native code]\";\n      },\n      sendMessage: function () {\n        \"[native code]\";\n      },\n      id: undefined,\n    };\n\n    let startE = Date.now();\n    chrome.csi = function () {\n      \"[native code]\";\n      return {\n        startE: startE,\n        onloadT: startE + 281,\n        pageT: 3947.235,\n        tran: 15,\n      };\n    };\n\n    chrome.loadTimes = function () {\n      \"[native code]\";\n      return {\n        get requestTime() {\n          return startE / 1000;\n        },\n        get startLoadTime() {\n          return startE / 1000;\n        },\n        get commitLoadTime() {\n          return startE / 1000 + 0.324;\n        },\n        get finishDocumentLoadTime() {\n          return startE / 1000 + 0.498;\n        },\n        get finishLoadTime() {\n          return startE / 1000 + 0.534;\n        },\n        get firstPaintTime() {\n          return startE / 1000 + 0.437;\n        },\n        get firstPaintAfterLoadTime() {\n          return 0;\n        },\n        get navigationType() {\n          return \"Other\";\n        },\n        get wasFetchedViaSpdy() {\n          return true;\n        },\n        get wasNpnNegotiated() {\n          return true;\n        },\n        get npnNegotiatedProtocol() {\n          return \"h3\";\n        },\n        get wasAlternateProtocolAvailable() {\n          return false;\n        },\n        get connectionInfo() {\n          return \"h3\";\n        },\n      };\n    };\n\n    window.chrome = chrome;\n  }\n\n  window.localStorage.clear();"
}

